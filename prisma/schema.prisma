generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

enum StudentRole {
    member
    admin
}

model Student {
    id          String      @id @default(cuid())
    photo       String
    nim         String      @unique
    name        String
    password    String
    dateOfBirth String?     @map("date_of_birth")
    address     String?
    role        StudentRole @default(member)

    createdAt DateTime @default(now()) @map("created_at")

    announcments Announcement[]
}

model Announcement {
    id      String @id @default(cuid())
    message String

    createdAt DateTime @default(now()) @map("created_at")

    studentId String  @map("student_id")
    student   Student @relation(fields: [studentId], references: [id])

    @@index([studentId])
    @@map("Announcement")
}

model Docent {
    id      String  @id @default(cuid())
    nidn    String
    name    String  @unique
    photo   String?
    phone   String?
    email   String
    address String?

    courses Course[]
}

enum LectureType {
    resource
    assignment
    url
    quiz
    forum
    page
    unknown
}

model Lecture {
    id       String      @id @default(cuid())
    name     String
    url      String      @unique
    type     LectureType @default(unknown)
    deadline DateTime

    meeting   Meeting @relation(fields: [meetingId], references: [id])
    meetingId String  @map("meeting_id")

    @@index([meetingId])
}

model Course {
    id           String @id @default(cuid())
    title        String @unique
    courseNumber String @map("course_number")

    docent   Docent @relation(fields: [docentId], references: [id])
    docentId String @map("docent_id")

    meetings Meeting[]

    @@index([docentId])
}

model Meeting {
    id          String @id @default(cuid())
    title       String
    topic       String
    competence  String @db.Text
    courseTitle String

    lectures Lecture[]

    courseId String @map("course_id")
    course   Course @relation(fields: [courseId], references: [id])

    @@unique([courseTitle, title])
    @@index([courseId])
}
